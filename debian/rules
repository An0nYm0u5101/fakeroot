#!/usr/bin/make -f

export DH_VERBOSE = 1

DEB_BUILD_GNU_TYPE = $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE = $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
CONFARGS = --host=$(DEB_HOST_GNU_TYPE)
endif

CFLAGS = -W -Wall -g
INSTALL = install
INSTALL_FILE    = $(INSTALL) -p    -o root -g root  -m  644
INSTALL_PROGRAM = $(INSTALL) -p    -o root -g root  -m  755
INSTALL_SCRIPT  = $(INSTALL) -p    -o root -g root  -m  755
INSTALL_DIR     = $(INSTALL) -p -d -o root -g root  -m  755

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
CFLAGS += -O0
else
CFLAGS += -O2
endif

LIB_DIR	 = usr/lib/$(DEB_HOST_MULTIARCH)

obj-sysv/config.status:
	dh_testdir
	mkdir obj-sysv
	cd obj-sysv && CFLAGS="$(CFLAGS)" ../configure --prefix=/usr --mandir=/usr/share/man --libdir=/$(LIB_DIR)/libfakeroot --program-suffix=-sysv $(CONFARGS)

obj-tcp/config.status:
	dh_testdir
	mkdir obj-tcp
	cd obj-tcp && CFLAGS="$(CFLAGS)" ../configure --prefix=/usr --mandir=/usr/share/man --libdir=/$(LIB_DIR)/libfakeroot --with-ipc=tcp --program-suffix=-tcp $(CONFARGS)

build: build-arch build-indep
build-indep:
build-arch: build-stamp
build-stamp: obj-sysv/config.status obj-tcp/config.status
	dh_testdir
	#dh_update_autotools_config
	#dh_auto_configure
	#dh_auto_build
	#dh_auto_test

	cd obj-sysv && $(MAKE)
	cd obj-tcp && $(MAKE)

ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
ifeq (,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
ifeq (,$(findstring hurd, $(DEB_HOST_ARCH_OS)))
	cd obj-sysv && $(MAKE) check
endif
	cd obj-tcp && $(MAKE) check
endif
endif

ifneq ($(DEB_HOST_GNU_SYSTEM),gnu)
	sed 's/@FAKEROOT_SYSV_ALTPRIO@/50/;s/@FAKEROOT_TCP_ALTPRIO@/30/;' \
		debian/fakeroot.postinst.in > debian/fakeroot.postinst
else
	sed 's/@FAKEROOT_SYSV_ALTPRIO@/30/;s/@FAKEROOT_TCP_ALTPRIO@/50/;' \
		debian/fakeroot.postinst.in > debian/fakeroot.postinst
endif
	sed 's,@LIBDIR@,/$(LIB_DIR),' \
		debian/fakeroot.postrm.in > debian/fakeroot.postrm

	touch build-stamp

clean:
	dh_testdir
	#dh_auto_clean
	dh_clean
	rm -rf obj-sysv obj-tcp
	rm -f build-stamp
	$(RM) debian/fakeroot.postinst
	$(RM) debian/fakeroot.postrm

# Build architecture-independent files here.
binary-indep:
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build-arch
	dh_testroot -a
	dh_prep -a
	dh_installdirs -a
	#dh_auto_install -a
	#dh_install -a

	cd obj-tcp && $(MAKE) DESTDIR="$(CURDIR)/debian/tmp" install

	mv debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot-0.so debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot-tcp.so
	rm debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot.so

	cd obj-sysv && $(MAKE) DESTDIR="$(CURDIR)/debian/tmp" install

	mv debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot-0.so debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot-sysv.so
	rm debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot.so

	echo /$(LIB_DIR)/libfakeroot > debian/libfakeroot/etc/ld.so.conf.d/fakeroot-$(DEB_HOST_MULTIARCH).conf
#	cd obj-sysv && ./libtool --finish $(CURDIR)/debian/tmp/$(LIB_DIR)/fakeroot
	rm -f debian/tmp/$(LIB_DIR)/libfakeroot/libfakeroot.*a*
	rm -f debian/tmp/usr/bin/simple
	# split
	(cd debian/tmp && find usr/bin usr/share -type f | xargs tar -cf - ) |\
		(cd debian/fakeroot && tar -xf - )
	(cd debian/tmp && find usr/lib | xargs tar -cf - ) |\
		(cd debian/libfakeroot && tar -xf - )
	dh_installdocs -a
	dh_installchangelogs -a
	#dh_installman -a
	dh_bugfiles -a
	dh_lintian -a
	dh_link -a
	dh_strip_nondeterminism -a
	dh_compress -a
	dh_fixperms -a
	dh_strip -a
	#dh_makeshlibs -a
	#dh_shlibdeps -a
	# We can just use the deps for faked.
	dpkg-shlibdeps -Tdebian/libfakeroot.substvars \
		debian/libfakeroot/$(LIB_DIR)/libfakeroot/*.so
	dpkg-shlibdeps -Tdebian/fakeroot.substvars \
		debian/fakeroot/usr/bin/faked-sysv \
		debian/fakeroot/usr/bin/faked-tcp
	dh_installdeb -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build build-arch build-indep clean binary-indep binary-arch binary
